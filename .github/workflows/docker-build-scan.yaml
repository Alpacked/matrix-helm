name: Docker Build and Scan Image

on:
  push:
    tags: [ "*" ]
    branches:
      - 'master'
      - 'feature/github-action-build-scan'

jobs:
  build:
    runs-on: ubuntu-latest
    environment: matrix-synapse
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: true
      matrix:
        platform:
          - linux/amd64
          - linux/arm64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:master

      - name: Log into Docker Hub registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.IMAGE_NAME }}
          labels: |
            org.opencontainers.image.revision=${{ github.SHA }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          load: true
          context: ${{ vars.CONTEXT }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{ matrix.platform }}
          cache-from: type=gha

      - name: Scan Docker image for vulnerabilities
        id: container-scan
        uses: crazy-max/ghaction-container-scan@v3
        with:
          image: ${{ steps.meta.outputs.tags }}
          dockerfile: ${{ vars.CONTEXT }}/Dockerfile
          severity_threshold: HIGH
          annotations: true

      - name: Upload SARIF file
        if: ${{ steps.scan.outputs.sarif != '' }}
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ${{ steps.container-scan.outputs.sarif }}

      - name: Push Docker image
        uses: docker/build-push-action@v5
        with:
          push: true
          context: ${{ vars.CONTEXT }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{ matrix.platform }}
          cache-to: type=gha,mode=max
          outputs: type=image,name=${{ vars.IMAGE_NAME }},push-by-digest=true,name-canonical=true

      - name: Export Digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload Digest
        uses: actions/upload-artifact@v3
        with:
          name: digests
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Download Digests
        uses: actions/download-artifact@v3
        with:
          name: digests
          path: /tmp/digests

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.IMAGE_NAME }}
          labels: |
            org.opencontainers.image.revision=${{ github.SHA }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}

      - name: Log into Docker Hub registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ vars.IMAGE_NAME }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ vars.IMAGE_NAME }}:${{ steps.meta.outputs.version }}
