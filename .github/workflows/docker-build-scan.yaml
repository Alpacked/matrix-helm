name: Docker Build and Scan Image

on:
  push:
    tags: [ "*" ]
    branches:
      - 'master'
      - 'feature/github-action-build-scan'

jobs:
  build:

    runs-on: ubuntu-latest
    environment: matrix-synapse
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64
          driver-opts: |
            image=moby/buildkit:master

      - name: Log into Docker Hub registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          labels: |
            org.opencontainers.image.revision=${{ github.SHA }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ env.CONTEXT }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha

      - name: Scan Docker image for vulnerabilities
        id: container-scan
        uses: crazy-max/ghaction-container-scan@v3
        with:
          image: ${{ steps.meta.outputs.tags }}
          dockerfile: ${{ env.CONTEXT }}/Dockerfile
          severity_threshold: HIGH
          annotations: true

      - name: Upload SARIF file
        if: ${{ steps.scan.outputs.sarif != '' }}
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ${{ steps.container-scan.outputs.sarif }}

      # Because we already build an image this should use cached layers to push
      - name: Push Docker image
        uses: docker/build-push-action@v5
        with:
          push: true
          context: ./synapse
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-to: type=gha,mode=max
